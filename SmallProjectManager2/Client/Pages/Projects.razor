@page "/projects"
@using SmallProjectManager2.Shared.Models
@using System.Runtime.InteropServices
@inject HttpClient HttpClient

<div>
    <div class="w-full bg-white rounded-sm mt-8">
        <header class="px-5 py-4 border-b border-gray-100 mb-4">
            <h2 class="font-semibold text-gray-800">Projects</h2>
        </header>
        @if (IsLoading) {
            <div class="mt-8 w-full border-2 border-yellow-400 p-4 bg-amber-200 rounded-2xl">
                <span>Loading</span>
            </div>
        }
        @if (IsError) {
            <div class="mt-8 w-full border-2 border-red-400 p-4 bg-red-200 rounded-2xl">
                <p>Error, please reload</p>
                <p>@Error</p>
            </div>
        }
        <button onclick="@GetAddresses" class="py-2.5 px-5 m-4 mt-0 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:border-blue-700 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-200">
            Refresh
        </button>
        <div class="px-5">
            <NavLink href="/addproject" class="font-light text-sm hover:underline">
                Add new project
            </NavLink>
        </div>
        <div class="p-3">
            <div class="overflow-x-auto">
                <table class="table-auto w-full">
                    <thead class="text-xs font-semibold uppercase text-gray-400 bg-gray-50">
                    <tr>
                        <th class="p-2 whitespace-nowrap">
                            <div class="font-semibold text-left">#ID</div>
                        </th>
                        <th class="p-2 whitespace-nowrap">
                            <div class="font-semibold text-left">Name</div>
                        </th>
                        <th class="p-2 whitespace-nowrap">
                            <div class="font-semibold text-left">Progress</div>
                        </th>
                        <th class="p-2 whitespace-nowrap">
                            <div class="font-semibold text-left">Owner</div>
                        </th>
                        <th class="p-2 whitespace-nowrap">
                            <div class="font-semibold text-left">Actions</div>
                        </th>
                    </tr>
                    </thead>
                    <tbody class="text-sm divide-y">
                    @foreach (var project in ProjectList) {
                        <tr class="border-b hover:bg-gray-200 rounded-md even:bg-slate-100">
                            <td class="p-2 whitespace-nowrap">
                                <div class="font-medium text-gray-800">#@project.ID</div>
                            </td>
                            <td class="p-2 whitespace-nowrap">
                                <div class="font-medium text-gray-800">@project.Name</div>
                            </td>
                            <td class="p-2 whitespace-nowrap">
                                <div class="text-left">@project.Progress</div>
                            </td>
                            <td class="p-2 whitespace-nowrap">
                                <div class="text-left font-medium">@project.Person</div>
                            </td>
                            <td class="p-2 whitespace-nowrap">
                                <button onclick="@(() => Delete(project))" class="group mr-2 p-1.5 w-10 text-sm aspect-square font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-red-500 focus:z-10 focus:ring-4 focus:ring-gray-200 border-2 border-transparent hover:border-black">
                                    <svg class="group-hover:stroke-white stroke-gray-800" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="black">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                    </svg>
                                </button>
                                <button class="group mr-2 p-1.5 w-10 text-sm aspect-square font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-red-500 focus:z-10 focus:ring-4 focus:ring-gray-200 border-2 border-transparent hover:border-black">
                                    <NavLink href="/editaddress">
                                        <svg class="group-hover:stroke-white stroke-gray-800" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="black">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10"/>
                                        </svg>
                                    </NavLink>
                                </button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code {

    private bool IsLoading { get; set; } = true;
    private bool IsError { get; set; } = false;
    private string? Error { get; set; } = null;
    private List<ProjectDtoGet> ProjectList { get; set; } = new();

    protected override async Task OnInitializedAsync() {
        await GetAddresses();
    }

    private async Task GetAddresses() {
        IsLoading = true;
        try {
            ProjectList = await HttpClient.GetFromJsonAsync<List<ProjectDtoGet>>("/api/projects") ?? ProjectList;
        }
        catch (Exception e) {
            IsError = true;
            Error = e.Message;
        }
        finally {
            IsLoading = false;
        }
    }

    private async void Delete(ProjectDtoGet projectToDelete) {
        if ((await HttpClient.DeleteAsync($"/api/address/{projectToDelete.ID}")).IsSuccessStatusCode) {
            Console.WriteLine($"Removed {projectToDelete.ID}");
            ProjectList.Remove(projectToDelete);
            StateHasChanged();
        }
    }

}